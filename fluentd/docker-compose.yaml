services:
    reverse_proxy:
      image: traefik:latest
      hostname: traefik
      ports:
        - target: 80
          published: 80
        # WEB UI
        - target: 8080
          published: 8080
      volumes:
        - type: bind # docker providerを使う場合必須
          source: /var/run/docker.sock
          target: /var/run/docker.sock
        - type: bind # 外部イメージのため設定はマウントで行う
          source: traefik
          target: /etc/traefik
          read_only: true
        - type: volume
          source: log_storage
          target: /var/log/traefik
      networks:
        efk_stack_nw:

    service_a:
      build: ./nginx
      hostname: service-a
      volumes:
        - type: bind
          source: nginx/service_a.html
          target: /usr/share/nginx/html/service-a.html
          read_only: true
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.for-service-a.rule=PathPrefix(`/service-a`)"
        - "traefik.http.routers.for-service-a.entrypoints=web"
      depends_on:
        - logger
      logging:
        driver: "fluentd"
        options:
          # localhostはservice_aのことではなく、host OSのこと
          fluentd-address: 10.10.10.10:24224
          tag: service.a.access
          # workaround: 起動時に接続失敗してコンテナが立ち上がらない問題を回避
          fluentd-async-connect: "true"
      networks:
        efk_stack_nw:

    service_b:
      build: ./nginx
      hostname: service-b
      volumes:
        - type: bind
          source: nginx/service_b.html
          target: /usr/share/nginx/html/service-b.html
          read_only: true
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.for-service-b.rule=PathPrefix(`/service-b`)"
        - "traefik.http.routers.for-service-b.entrypoints=web"
      depends_on:
        - logger
      logging:
        driver: "fluentd"
        options:
          fluentd-address: 10.10.10.10:24224
          tag: service.b.access
          fluentd-async-connect: "true"
      networks:
        efk_stack_nw:

    logger:
      build: ./fluentd
      hostname: logger
      restart: always
      # ports:
      #   - target: 24224
      #     published: 24224
      #   - target: 24220
      #     published: 24220
      #   - target: 24224
      #     published: 24224
      #     protocol: udp
      volumes:
        - type: volume
          source: log_storage
          target: /fluentd/log/traefik
      networks:
        efk_stack_nw:
          ipv4_address: 10.10.10.10

    analyzer:
      build: elasticsearch/
      hostname: elasticsearch
      restart: always
      ulimits:
        memlock:
          soft: -1
          hard: -1
      volumes:
        - type: volume
          source: analysis_storage
          target: /usr/share/elasticsearch/data
      # ports:
      #   - target: 9200
      #     published: 9200
      networks:
        efk_stack_nw:

    visualizer:
      build: kibana/
      hostname: kibana
      ports:
        # WEB UI
        - target: 5601
          published: 5601
      environment:
        # analyzer service's hostname
        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      depends_on:
        - analyzer
      restart: always
      networks:
        efk_stack_nw:

volumes:
  log_storage:
    name: log_storage
    external: false
  analysis_storage:
    name: analysis_storage
    external: false

networks:
  efk_stack_nw:
    ipam:
      driver: default
      config:
        - subnet: 10.10.10.0/24
